Позвольте предложить пошаговый план по реализации проекта, включая первичную фильтрацию и доработку платформы для сбора рекламы в рилс.

Первая стадия - Первичная фильтрация
Шаг 1: Создание структуры базы данных
Создание таблицы для блоггеров:

Таблица bloggers:
id - уникальный идентификатор
instagram_id - ID аккаунта блоггера
name - имя блоггера
instagram_category - категория Instagram
super_categories - супер-категории (может быть несколько категорий, поэтому нужно использовать связь многие-ко-многим)
Создание таблицы для супер-категорий:

Таблица super_categories:
id - уникальный идентификатор
name - имя категории
Создание таблицы связи для супер-категорий блоггеров:

Таблица blogger_super_category:
blogger_id - ID блоггера
super_category_id - ID супер-категории
Создание таблицы для рилс:

Таблица reels:
id - уникальный идентификатор
blogger_id - ID блоггера
date_time - дата и время получения рилс
update_time - дата и время последнего обновления данных
pk - ID медиа от Hiker
taken_at - дата публикации рилс от Hiker
media_type - тип медиа от Hiker
product_type - тип продукта от Hiker
thumbnail_url - URL миниатюры от Hiker
video_url - URL видео от Hiker
caption_text - текст подписи от Hiker
play_count - количество просмотров от Hiker
like_count - количество лайков от Hiker
comment_count - количество комментариев от Hiker
Шаг 2: Запрос данных от Hiker
Использование метода /v1/user/clips/chunk для получения рилс:
Для каждого блоггера выполняем до 4 запросов для получения последних 48 рилс.
Проверяем наличие параметра End Cursor для продолжения цепочки запросов.
Если End Cursor равен NULL, останавливаем запросы для текущего блоггера.
Шаг 3: Анализ данных для выявления рекламных интеграций
Анализ текста подписей (caption_text) на предмет ключевых слов:

WB, ВБ, Артикул, Вайлдбериз, Wildberries, арт.
Проверка наличия чисел из 6 и более цифр (артикулов).
Сохранение результатов анализа в базе данных:

Сохранение выявленных номеров артикулов и помеченных рилс как рекламные интеграции (РИ).
